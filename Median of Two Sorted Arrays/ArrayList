class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        
        List<Integer> l = new ArrayList<>();
        
        if(nums1.length == 0){
            if(nums2.length%2 != 0)
                return (nums2[(nums2.length-1)/2]);
            else{
                double a = nums2[nums2.length/2];
                double b = nums2[(nums2.length - 1) /2];
                return (a+b)/2;
            }
        }
        if(nums2.length == 0){
            if(nums1.length%2 != 0)
                return (nums1[(nums1.length-1)/2]);
            else{
                double a = nums1[nums1.length/2];
                double b = nums1[(nums1.length - 1) /2];
                return (a+b)/2;
            }
        }
        
        for(int i : nums1)
            l.add(i);
        for(int i : nums2)
            l.add(i);
        double d;
        
        Collections.sort(l);

        if(l.size()%2 != 0)
            return l.get((l.size()-1)/2);
        else{
            double a = l.get(l.size()/2);
            double b = l.get((l.size()-1)/2);
            return (a+b)/2;
        }
        
    }
}
